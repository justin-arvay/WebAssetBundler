@{
    ViewBag.Title = "Bundle Pipelines";
    Layout = "~/Views/Shared/_DocumentationLayout.cshtml";
}

<h2>Bundle Pipeline</h2>
<p>Bundles are processed in a pipleine that allows for easy modification. You can add in your own pipeline processing
to customize how a bundle is processed. There is one pipeline for style sheets and one for bundles. Each pipeline has default processors
used for the standard bundling procedure.</p>

<h6>ScriptPipeline</h6>
<p>Default processors for script bundles (processed in this order):</p>
<ol>   
    <li>Assign Hash - Assigns the hashed that represents the unique content for the bundles assets.</li>       
    <li>Url Assignment Processor - generates and assignes the url for the bundle.</li>
    <li>Minify Processor - minifies the assets.</li>    
    <li>Merge Processor - merges the assets into one asset.</li>
</ol>

<h6>StyleSheetPipeline</h6>
<p>Default processors for style sheet bundles (processed in this order):</p>
<ol>    
    <li>Assign Hash - Assigns the hashed that represents the unique content for the bundles assets.</li>    
    <li>Url Assignment Processor - generates and assignes the url for the bundle.</li>
    <li>Expand Path Processor - updates any image paths to work with the url.</li>
    <li>Minify Processor - minifies the assets.</li>    
    <li>Merge Processor - merges the assets into one asset.</li>
</ol>
<p>The image path processor is dependant on the url be assigned before it can process the image paths. Be aware of this when modifying
the pipeline.</p>

<h6>ImagePipeline</h6>
<p>Default processors for image bundles (processed in this order):</p>
<p><strong>Note:</strong> The image pipeline must be enabled. See @Html.RouteLink("WAB Section Tag", "Documentation", new { path = "web-config/wab-section" }).</p>
<ol>   
    <li>Assign Hash - Assigns the hashed that represents the unique content for the bundles assets.</li>       
    <li>Url Assignment Processor - generates and assignes the url for the bundle.</li>
</ol>